---
- hosts: all
  vars:
    minio_server_url: https://dl.min.io/server/minio/release/linux-amd64/minio
    minio_client_url: https://dl.min.io/client/mc/release/linux-amd64/mc
    minio_data_dir: /data
    minio_access_key: XNb8yMbYVgbEUEVFd8Q95pXhWTuKJdvd
    minio_secret_key: zg8Q9y3yD8ayQEkFFh4yF7p828Jydeqzwpu8L4DuTw8ZWjNEgTVnW7FLuvkXe7tS
  gather_facts: no
  become: true
  tasks:
    - name: Bootstrap a host without python installed
      raw: apt install -y python

    - name: Add cluster nodes to /etc/hosts
      lineinfile:
        path: /etc/hosts
        line: "{{ item }}"
        insertafter: EOF
# Can't iterate over an auto-generated Vagrant inventory here
# since "fake" names like "localhost:2222" are specified there
      with_items:
        - "192.168.1.101       minio-node-1"
        - "192.168.1.102       minio-node-2"
        - "192.168.1.103       minio-node-3"

    - name: Create data directory
      file:
        path: "{{ minio_data_dir }}"
        state: directory
        mode: "0600"
        owner: root
        group: root

    - name: Download MinIO binaries
      get_url:
        url: "{{ item.url }}"
        dest: "/usr/bin/{{ item.name }}"
        mode: '755'
      with_items:
        - { name: minio, url: "{{ minio_server_url }}" }
        - { name: mc,    url: "{{ minio_client_url }}" }
      notify: Restart MinIO

# Roles and ./files or ./templates directories
# should be used instead of this in a big project

    - name: Create systemd service file
      copy:
        dest: /lib/systemd/system/minio.service
        mode: "0644"
        content: |-
          [Unit]
          Description=minio
          Documentation=https://docs.min.io
          Wants=network-online.target
          After=network-online.target
          AssertFileIsExecutable=/usr/bin/minio
          #
          [Service]
          WorkingDirectory=/usr/bin/
          User=root
          Group=root
          EnvironmentFile=/etc/default/minio
          ExecStart=/usr/bin/minio server ${MINIO_OPTS}
          Restart=always
          LimitNOFILE=65536
          TimeoutStopSec=infinity
          SendSIGKILL=no
          #
          [Install]
          WantedBy=multi-user.target
      notify: Restart MinIO


    - name: Create environment variables file
      copy:
        dest: /etc/default/minio
        mode: "0600"
        owner: root
        group: root
        content: |-
          MINIO_OPTS="http://minio-node-{1...3}:9000{{ minio_data_dir }}/{1...4}"
          MINIO_ACCESS_KEY="{{ minio_access_key }}"
          MINIO_SECRET_KEY="{{ minio_secret_key }}"
      notify: Restart MinIO

    - name: Install Nginx
      apt:
        name: nginx
        state: present
      
    - name: Remove default site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: Create config for reverse proxy
      copy:
        dest: /etc/nginx/sites-available/reverse-proxy.conf
        content: |-
          upstream minio_servers
          {
             server minio-node-1:9000;
             server minio-node-2:9000;
             server minio-node-3:9000;
          }
          server
          {
             listen 80;
             server_name minio-cluster;
             location /
             {
               proxy_set_header Host $http_host;
               proxy_pass       http://minio_servers;
             }
          }
      notify: Restart Nginx

    - name: Create symlink for config file
      file:
        src:  /etc/nginx/sites-available/reverse-proxy.conf
        path: /etc/nginx/sites-enabled/reverse-proxy.conf
        state: link
      notify: Restart Nginx
        

  handlers:
    - name: Restart MinIO
      systemd:
        daemon_reload: yes
        name: minio
        state: restarted
        enabled: true

    - name: Restart Nginx
      systemd:
        name: nginx
        state: restarted
        enabled: true

